name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main  # Deploy on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build Docker image for Lambda
      - name: Build Docker image
        run: |
          docker build -t my-lambda-image .

      # Step 5: Set up AWS CLI with credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      # Step 6: Authenticate Docker to AWS ECR (with error handling)
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.REGION }} | docker login --username AWS --password-stdin <span class="math-inline">\{\{ secrets\.AWS\_ACCOUNT\_ID \}\}\.dkr\.ecr\.</span>{{ secrets.REGION }}.amazonaws.com || echo "Failed to login to ECR. Check credentials and permissions."
          exit 1

      # Step 7: Create ECR repository (if not exists)
      - name: Create ECR repository (if not exists)
        run: |
          aws ecr describe-repositories --repository-names my-lambda-repository || aws ecr create-repository --repository-name my-lambda-repository --region ${{ secrets.REGION }}

      # Step 8: Tag Docker image
      - name: Tag Docker image for ECR
        run: |
          docker tag my-lambda-image:latest <span class="math-inline">\{\{ secrets\.AWS\_ACCOUNT\_ID \}\}\.dkr\.ecr\.</span>{{ secrets.REGION }}.amazonaws.com/my-lambda-repository:latest

      # Step 9: Push Docker image to ECR (with error handling)
      - name: Push Docker image to ECR
        run: |
          docker push <span class="math-inline">\{\{ secrets\.AWS\_ACCOUNT\_ID \}\}\.dkr\.ecr\.</span>{{ secrets.REGION }}.amazonaws.com/my-lambda-repository:latest || echo "Failed to push image to ECR. Check image name, repository, and permissions."
          exit 1

      # Step 10: Create or update Lambda function with Docker image
      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code --function-name deployment-function \
            --image-uri <span class="math-inline">\{\{ secrets\.AWS\_ACCOUNT\_ID \}\}\.dkr\.ecr\.</span>{{ secrets.REGION }}.amazonaws.com/my-lambda-repository:latest